<?php

/**
 * @file
 * Code for the TTC Views feature.
 */

include_once 'ttc_views.features.inc';

function ttc_views_views_pre_render(&$view) {
    // if the view is abstract_rss
    if ($view->name == 'abstracts_rss') {
        // retrieve the first argument, which should be a dash-delimited product 
        // type name
        $term_name = str_replace('-', ' ', $view->args[0]);
        $terms = taxonomy_get_term_by_name($term_name, 'product_type');
        
        // if terms are found...
        if(!empty($terms)) {
            // retrieve the first match
            $term = reset($terms);
            
            // update the view title
            $title = $term->name;
            $view->build_info['title'] = "TTC $title";
        }
    }
}

/***
 * Override of MODULE_preprocess_HOOK to add image enclosures to RSS if the 
 * image field is available.
 */
function ttc_views_preprocess_views_view_row_rss(&$variables, $hook) {
    // find the id of the row in the results (id is base-1, results use base-0)
    $id = $variables['id'];
    $results = $variables['view']->result;
    
    // if the id is within the results
    if(sizeof($results) >= $id) {
        // retrieve the row's result (a partially-filled node object)
        $result = $results[$id-1];
        
        // also retrieve a reference to the row to update the XML elements
        // with an enclosure containing the image's information
        $item = &$variables['row'];

        // if an image exists...
        if(isset($result->field_field_image[0]['raw'])) {
            // retrieve the image information
            $image = $result->field_field_image[0];
            
            $item->elements[] = array(
              'key' => 'enclosure',
              // file_create_url generates an absolute URL from the image's URI
              'attributes' => array(
                  'url' => file_create_url($image['raw']['uri']),
                  'length' => $image['raw']['filesize'],
                  'type' => $image['raw']['filemime'],
                  ),
            );

            // update the item_elements with the formatted xml
            $variables['item_elements'] = empty($item->elements) ? '' : format_xml_elements($item->elements);
        
        }
    
    }
}